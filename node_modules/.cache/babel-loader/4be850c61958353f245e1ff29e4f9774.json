{"ast":null,"code":"import axios from 'axios';\nconst FetchConsts = {\n  GET: 'get',\n  POST: 'post',\n  PUT: 'put',\n  DELETE: 'delete',\n  APPLICATION_JSON: 'application/json',\n  APPLICATION_X_WWW_FORM_URL_ENCODED: 'application/x-www-form-urlencoded',\n  MULTIPART_FORM_DATA: 'multipart/form-data',\n  TEXT_PLAIN: 'text/plain'\n};\nconst axiosInstance = axios.create({\n  baseURL: 'https://api.unsplash.com',\n  headers: {\n    Authorization: `Client-ID a9b4360b6eb4e9a19fb25cf2bb43f0f5d6e4dfc873e111c1335dc37179c3fd02`\n  }\n});\n\nconst request = async (method, url, data) => {\n  try {\n    let axiosConfig = {\n      url,\n      method,\n      data\n    };\n\n    if (method === FetchConsts.GET) {\n      axiosConfig.method = FetchConsts.GET;\n      axiosConfig.params = data;\n    } else {\n      axiosConfig.data = data;\n    }\n\n    console.log(\"@@ [request] \", axiosConfig);\n    const result = await axiosInstance(axiosConfig);\n    console.log(\"@@ [response] \", result);\n    return result;\n  } catch (e) {\n    console.log(\"@@ e\", e);\n  }\n};\n\nconst FetchHelper = {\n  fetchJsonGet: (url, params) => request(FetchConsts.GET, url, params),\n  fetchJsonPost: (url, data) => request(FetchConsts.POST, url, data),\n  fetchJsonUpdate: (url, data) => request(FetchConsts.PUT, url, data),\n  fetchJsonDelete: (url, data) => request(FetchConsts.DELETE, url, data)\n};\nexport default FetchHelper;","map":{"version":3,"sources":["/Users/binhk1004/Personal-project2/src/helpers/FetchHelper.js"],"names":["axios","FetchConsts","GET","POST","PUT","DELETE","APPLICATION_JSON","APPLICATION_X_WWW_FORM_URL_ENCODED","MULTIPART_FORM_DATA","TEXT_PLAIN","axiosInstance","create","baseURL","headers","Authorization","request","method","url","data","axiosConfig","params","console","log","result","e","FetchHelper","fetchJsonGet","fetchJsonPost","fetchJsonUpdate","fetchJsonDelete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,GAAG,EAAE,KADW;AAEhBC,EAAAA,IAAI,EAAE,MAFU;AAGhBC,EAAAA,GAAG,EAAE,KAHW;AAIhBC,EAAAA,MAAM,EAAE,QAJQ;AAMhBC,EAAAA,gBAAgB,EAAE,kBANF;AAOhBC,EAAAA,kCAAkC,EAAE,mCAPpB;AAQhBC,EAAAA,mBAAmB,EAAE,qBARL;AAShBC,EAAAA,UAAU,EAAE;AATI,CAApB;AAYA,MAAMC,aAAa,GAAGV,KAAK,CAACW,MAAN,CAAa;AAC/BC,EAAAA,OAAO,EAAE,0BADsB;AAE/BC,EAAAA,OAAO,EAAE;AACLC,IAAAA,aAAa,EAAG;AADX;AAFsB,CAAb,CAAtB;;AAQA,MAAMC,OAAO,GAAG,OAAOC,MAAP,EAAeC,GAAf,EAAoBC,IAApB,KAA6B;AACzC,MAAI;AACA,QAAIC,WAAW,GAAG;AACdF,MAAAA,GADc;AAEdD,MAAAA,MAFc;AAGdE,MAAAA;AAHc,KAAlB;;AAMA,QAAGF,MAAM,KAAKf,WAAW,CAACC,GAA1B,EAA+B;AAC3BiB,MAAAA,WAAW,CAACH,MAAZ,GAAqBf,WAAW,CAACC,GAAjC;AACAiB,MAAAA,WAAW,CAACC,MAAZ,GAAqBF,IAArB;AACH,KAHD,MAIK;AACDC,MAAAA,WAAW,CAACD,IAAZ,GAAmBA,IAAnB;AACH;;AAEDG,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,WAA7B;AAEA,UAAMI,MAAM,GAAG,MAAMb,aAAa,CAACS,WAAD,CAAlC;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,MAA9B;AAEA,WAAOA,MAAP;AACH,GAtBD,CAuBA,OAAOC,CAAP,EAAU;AACNH,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBE,CAApB;AACH;AACJ,CA3BD;;AA6BA,MAAMC,WAAW,GAAI;AACjBC,EAAAA,YAAY,EAAE,CAACT,GAAD,EAAMG,MAAN,KAAiBL,OAAO,CAACd,WAAW,CAACC,GAAb,EAAkBe,GAAlB,EAAuBG,MAAvB,CADrB;AAGjBO,EAAAA,aAAa,EAAE,CAACV,GAAD,EAAMC,IAAN,KAAeH,OAAO,CAACd,WAAW,CAACE,IAAb,EAAmBc,GAAnB,EAAwBC,IAAxB,CAHpB;AAKjBU,EAAAA,eAAe,EAAE,CAACX,GAAD,EAAMC,IAAN,KAAeH,OAAO,CAACd,WAAW,CAACG,GAAb,EAAkBa,GAAlB,EAAuBC,IAAvB,CALtB;AAOjBW,EAAAA,eAAe,EAAE,CAACZ,GAAD,EAAMC,IAAN,KAAeH,OAAO,CAACd,WAAW,CAACI,MAAb,EAAqBY,GAArB,EAA0BC,IAA1B;AAPtB,CAArB;AAUA,eAAeO,WAAf","sourcesContent":["import axios from 'axios';\n\nconst FetchConsts = {\n    GET: 'get',\n    POST: 'post',\n    PUT: 'put',\n    DELETE: 'delete',\n\n    APPLICATION_JSON: 'application/json',\n    APPLICATION_X_WWW_FORM_URL_ENCODED: 'application/x-www-form-urlencoded',\n    MULTIPART_FORM_DATA: 'multipart/form-data',\n    TEXT_PLAIN: 'text/plain',\n};\n\nconst axiosInstance = axios.create({\n    baseURL: 'https://api.unsplash.com',\n    headers: {\n        Authorization: `Client-ID a9b4360b6eb4e9a19fb25cf2bb43f0f5d6e4dfc873e111c1335dc37179c3fd02`\n    }\n})\n\n\nconst request = async (method, url, data) => {\n    try {\n        let axiosConfig = {\n            url,\n            method,\n            data,\n        };\n\n        if(method === FetchConsts.GET) {\n            axiosConfig.method = FetchConsts.GET;\n            axiosConfig.params = data;\n        }\n        else {\n            axiosConfig.data = data;\n        }\n\n        console.log(\"@@ [request] \", axiosConfig);\n\n        const result = await axiosInstance(axiosConfig);\n\n        console.log(\"@@ [response] \", result);\n\n        return result;\n    }\n    catch (e) {\n        console.log(\"@@ e\", e);\n    }\n}\n\nconst FetchHelper =  {\n    fetchJsonGet: (url, params) => request(FetchConsts.GET, url, params),\n\n    fetchJsonPost: (url, data) => request(FetchConsts.POST, url, data),\n\n    fetchJsonUpdate: (url, data) => request(FetchConsts.PUT, url, data),\n\n    fetchJsonDelete: (url, data) => request(FetchConsts.DELETE, url, data),\n};\n\nexport default FetchHelper;\n"]},"metadata":{},"sourceType":"module"}