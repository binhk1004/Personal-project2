{"ast":null,"code":"import React from 'react';\nconst {\n  useEffect,\n  useCallback,\n  useState,\n  useRef\n} = React;\nconst perf = typeof performance !== 'undefined' ? performance : Date;\n\nconst now = () => perf.now();\n\nexport const useThrottleCallback = (callback, fps = 30, leading = false) => {\n  const storedCallback = useRef(callback);\n  storedCallback.current = callback;\n  const wait = 1000 / fps;\n  const prev = useRef(0);\n  const trailingTimeout = useRef(void 0);\n\n  const clearTrailing = () => clearTimeout(trailingTimeout.current);\n\n  const deps = [fps, leading]; // Reset any time the deps change\n\n  function _ref() {\n    prev.current = 0;\n    clearTrailing();\n  }\n\n  useEffect(() => _ref, deps);\n  return useCallback(function () {\n    // eslint-disable-next-line prefer-rest-params\n    const args = arguments;\n    const rightNow = now();\n\n    const call = () => {\n      prev.current = rightNow;\n      clearTrailing(); // eslint-disable-next-line prefer-spread\n\n      storedCallback.current.apply(null, args);\n    };\n\n    const current = prev.current; // leading\n\n    if (leading && current === 0) return call(); // body\n\n    if (rightNow - current > wait) {\n      if (current > 0) return call();\n      prev.current = rightNow;\n    } // trailing\n\n\n    clearTrailing();\n    trailingTimeout.current = setTimeout(() => {\n      // eslint-disable-next-line prefer-spread\n      storedCallback.current.apply(null, args);\n      prev.current = 0;\n    }, wait);\n  }, deps);\n};\nexport const useThrottle = (initialState, fps, leading) => {\n  const ref = useState(initialState);\n  return [ref[0], useThrottleCallback(ref[1], fps, leading)];\n};\nexport default useThrottle;","map":{"version":3,"sources":["/Users/binhk1004/Personal-project2/node_modules/@react-hook/throttle/dist/module/index.js"],"names":["React","useEffect","useCallback","useState","useRef","perf","performance","Date","now","useThrottleCallback","callback","fps","leading","storedCallback","current","wait","prev","trailingTimeout","clearTrailing","clearTimeout","deps","_ref","args","arguments","rightNow","call","apply","setTimeout","useThrottle","initialState","ref"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAM;AAACC,EAAAA,SAAD;AAAYC,EAAAA,WAAZ;AAAyBC,EAAAA,QAAzB;AAAmCC,EAAAA;AAAnC,IAA6CJ,KAAnD;AACA,MAAMK,IAAI,GAAG,OAAOC,WAAP,KAAuB,WAAvB,GAAqCA,WAArC,GAAmDC,IAAhE;;AAEA,MAAMC,GAAG,GAAG,MAAMH,IAAI,CAACG,GAAL,EAAlB;;AAEA,OAAO,MAAMC,mBAAmB,GAAG,CAACC,QAAD,EAAWC,GAAG,GAAG,EAAjB,EAAqBC,OAAO,GAAG,KAA/B,KAAyC;AAC1E,QAAMC,cAAc,GAAGT,MAAM,CAACM,QAAD,CAA7B;AACAG,EAAAA,cAAc,CAACC,OAAf,GAAyBJ,QAAzB;AACA,QAAMK,IAAI,GAAG,OAAOJ,GAApB;AACA,QAAMK,IAAI,GAAGZ,MAAM,CAAC,CAAD,CAAnB;AACA,QAAMa,eAAe,GAAGb,MAAM,CAAC,KAAK,CAAN,CAA9B;;AAEA,QAAMc,aAAa,GAAG,MAAMC,YAAY,CAACF,eAAe,CAACH,OAAjB,CAAxC;;AAEA,QAAMM,IAAI,GAAG,CAACT,GAAD,EAAMC,OAAN,CAAb,CAT0E,CAS9C;;AAE5B,WAASS,IAAT,GAAgB;AACdL,IAAAA,IAAI,CAACF,OAAL,GAAe,CAAf;AACAI,IAAAA,aAAa;AACd;;AAEDjB,EAAAA,SAAS,CAAC,MAAMoB,IAAP,EAAaD,IAAb,CAAT;AACA,SAAOlB,WAAW,CAAC,YAAY;AAC7B;AACA,UAAMoB,IAAI,GAAGC,SAAb;AACA,UAAMC,QAAQ,GAAGhB,GAAG,EAApB;;AAEA,UAAMiB,IAAI,GAAG,MAAM;AACjBT,MAAAA,IAAI,CAACF,OAAL,GAAeU,QAAf;AACAN,MAAAA,aAAa,GAFI,CAED;;AAEhBL,MAAAA,cAAc,CAACC,OAAf,CAAuBY,KAAvB,CAA6B,IAA7B,EAAmCJ,IAAnC;AACD,KALD;;AAOA,UAAMR,OAAO,GAAGE,IAAI,CAACF,OAArB,CAZ6B,CAYA;;AAE7B,QAAIF,OAAO,IAAIE,OAAO,KAAK,CAA3B,EAA8B,OAAOW,IAAI,EAAX,CAdD,CAce;;AAE5C,QAAID,QAAQ,GAAGV,OAAX,GAAqBC,IAAzB,EAA+B;AAC7B,UAAID,OAAO,GAAG,CAAd,EAAiB,OAAOW,IAAI,EAAX;AACjBT,MAAAA,IAAI,CAACF,OAAL,GAAeU,QAAf;AACD,KAnB4B,CAmB3B;;;AAEFN,IAAAA,aAAa;AACbD,IAAAA,eAAe,CAACH,OAAhB,GAA0Ba,UAAU,CAAC,MAAM;AACzC;AACAd,MAAAA,cAAc,CAACC,OAAf,CAAuBY,KAAvB,CAA6B,IAA7B,EAAmCJ,IAAnC;AACAN,MAAAA,IAAI,CAACF,OAAL,GAAe,CAAf;AACD,KAJmC,EAIjCC,IAJiC,CAApC;AAKD,GA3BiB,EA2BfK,IA3Be,CAAlB;AA4BD,CA7CM;AA8CP,OAAO,MAAMQ,WAAW,GAAG,CAACC,YAAD,EAAelB,GAAf,EAAoBC,OAApB,KAAgC;AACzD,QAAMkB,GAAG,GAAG3B,QAAQ,CAAC0B,YAAD,CAApB;AACA,SAAO,CAACC,GAAG,CAAC,CAAD,CAAJ,EAASrB,mBAAmB,CAACqB,GAAG,CAAC,CAAD,CAAJ,EAASnB,GAAT,EAAcC,OAAd,CAA5B,CAAP;AACD,CAHM;AAIP,eAAegB,WAAf","sourcesContent":["import React from 'react'\nconst {useEffect, useCallback, useState, useRef} = React\nconst perf = typeof performance !== 'undefined' ? performance : Date\n\nconst now = () => perf.now()\n\nexport const useThrottleCallback = (callback, fps = 30, leading = false) => {\n  const storedCallback = useRef(callback)\n  storedCallback.current = callback\n  const wait = 1000 / fps\n  const prev = useRef(0)\n  const trailingTimeout = useRef(void 0)\n\n  const clearTrailing = () => clearTimeout(trailingTimeout.current)\n\n  const deps = [fps, leading] // Reset any time the deps change\n\n  function _ref() {\n    prev.current = 0\n    clearTrailing()\n  }\n\n  useEffect(() => _ref, deps)\n  return useCallback(function () {\n    // eslint-disable-next-line prefer-rest-params\n    const args = arguments\n    const rightNow = now()\n\n    const call = () => {\n      prev.current = rightNow\n      clearTrailing() // eslint-disable-next-line prefer-spread\n\n      storedCallback.current.apply(null, args)\n    }\n\n    const current = prev.current // leading\n\n    if (leading && current === 0) return call() // body\n\n    if (rightNow - current > wait) {\n      if (current > 0) return call()\n      prev.current = rightNow\n    } // trailing\n\n    clearTrailing()\n    trailingTimeout.current = setTimeout(() => {\n      // eslint-disable-next-line prefer-spread\n      storedCallback.current.apply(null, args)\n      prev.current = 0\n    }, wait)\n  }, deps)\n}\nexport const useThrottle = (initialState, fps, leading) => {\n  const ref = useState(initialState)\n  return [ref[0], useThrottleCallback(ref[1], fps, leading)]\n}\nexport default useThrottle\n"]},"metadata":{},"sourceType":"module"}