{"ast":null,"code":"import * as React from 'react';\nimport useLayoutEffect from '@react-hook/passive-layout-effect';\n\nfunction useEvent(target, type, listener) {\n  const storedListener = React.useRef(listener);\n  storedListener.current = listener;\n\n  function _listener(...args) {\n    storedListener.current.apply(this, args);\n  }\n\n  useLayoutEffect(() => {\n    const targetEl = target && 'current' in target ? target.current : target;\n    if (!targetEl) return;\n    const listener = _listener;\n    targetEl.addEventListener(type, listener);\n    return () => {\n      targetEl.removeEventListener(type, listener);\n    };\n  }, [target, type]);\n}\n\nexport default useEvent;","map":{"version":3,"sources":["/Users/binhk1004/Personal-project2/node_modules/@react-hook/event/dist/module/index.js"],"names":["React","useLayoutEffect","useEvent","target","type","listener","storedListener","useRef","current","_listener","args","apply","targetEl","addEventListener","removeEventListener"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;;AAEA,SAASC,QAAT,CAAkBC,MAAlB,EAA0BC,IAA1B,EAAgCC,QAAhC,EAA0C;AACxC,QAAMC,cAAc,GAAGN,KAAK,CAACO,MAAN,CAAaF,QAAb,CAAvB;AACAC,EAAAA,cAAc,CAACE,OAAf,GAAyBH,QAAzB;;AAEA,WAASI,SAAT,CAAmB,GAAGC,IAAtB,EAA4B;AAC1BJ,IAAAA,cAAc,CAACE,OAAf,CAAuBG,KAAvB,CAA6B,IAA7B,EAAmCD,IAAnC;AACD;;AAEDT,EAAAA,eAAe,CAAC,MAAM;AACpB,UAAMW,QAAQ,GAAGT,MAAM,IAAI,aAAaA,MAAvB,GAAgCA,MAAM,CAACK,OAAvC,GAAiDL,MAAlE;AACA,QAAI,CAACS,QAAL,EAAe;AACf,UAAMP,QAAQ,GAAGI,SAAjB;AACAG,IAAAA,QAAQ,CAACC,gBAAT,CAA0BT,IAA1B,EAAgCC,QAAhC;AACA,WAAO,MAAM;AACXO,MAAAA,QAAQ,CAACE,mBAAT,CAA6BV,IAA7B,EAAmCC,QAAnC;AACD,KAFD;AAGD,GARc,EAQZ,CAACF,MAAD,EAASC,IAAT,CARY,CAAf;AASD;;AAED,eAAeF,QAAf","sourcesContent":["import * as React from 'react'\nimport useLayoutEffect from '@react-hook/passive-layout-effect'\n\nfunction useEvent(target, type, listener) {\n  const storedListener = React.useRef(listener)\n  storedListener.current = listener\n\n  function _listener(...args) {\n    storedListener.current.apply(this, args)\n  }\n\n  useLayoutEffect(() => {\n    const targetEl = target && 'current' in target ? target.current : target\n    if (!targetEl) return\n    const listener = _listener\n    targetEl.addEventListener(type, listener)\n    return () => {\n      targetEl.removeEventListener(type, listener)\n    }\n  }, [target, type])\n}\n\nexport default useEvent\n"]},"metadata":{},"sourceType":"module"}